
import { LanguageOption } from './types';

export const SUPPORTED_LANGUAGES: LanguageOption[] = [
  { value: 'applescript', label: 'AppleScript' },
  { value: 'assembly', label: 'Assembly' },
  { value: 'bash', label: 'Bash' }, // Also Shell Script
  { value: 'c', label: 'C' },
  { value: 'clojure', label: 'Clojure' },
  { value: 'cobol', label: 'COBOL' },
  { value: 'coffeescript', label: 'CoffeeScript' },
  { value: 'cpp', label: 'C++' },
  { value: 'csharp', label: 'C#' },
  { value: 'css', label: 'CSS' },
  { value: 'd', label: 'D' },
  { value: 'dart', label: 'Dart' },
  { value: 'delphi', label: 'Delphi/Pascal' },
  { value: 'diff', label: 'Diff' },
  { value: 'dockerfile', label: 'Dockerfile' },
  { value: 'elixir', label: 'Elixir' },
  { value: 'elm', label: 'Elm' },
  { value: 'erlang', label: 'Erlang' },
  { value: 'fortran', label: 'Fortran' },
  { value: 'fsharp', label: 'F#' },
  { value: 'gdscript', label: 'GDScript (Godot)' },
  { value: 'gherkin', label: 'Gherkin (Cucumber)' },
  { value: 'go', label: 'Go' },
  { value: 'graphql', label: 'GraphQL' },
  { value: 'groovy', label: 'Groovy' },
  { value: 'haskell', label: 'Haskell' },
  { value: 'haxe', label: 'Haxe' },
  { value: 'html', label: 'HTML' },
  { value: 'java', label: 'Java' },
  { value: 'javascript', label: 'JavaScript' },
  { value: 'json', label: 'JSON' },
  { value: 'julia', label: 'Julia' },
  { value: 'jsx', label: 'JSX' },
  { value: 'kotlin', label: 'Kotlin' },
  { value: 'latex', label: 'LaTeX' },
  { value: 'less', label: 'Less' },
  { value: 'lisp', label: 'Lisp' },
  { value: 'livescript', label: 'LiveScript' },
  { value: 'lua', label: 'Lua' },
  { value: 'makefile', label: 'Makefile' },
  { value: 'markdown', label: 'Markdown' },
  { value: 'matlab', label: 'MATLAB' },
  { value: 'nginx', label: 'NGINX Configuration' },
  { value: 'nim', label: 'Nim' },
  { value: 'nix', label: 'Nix' },
  { value: 'objectivec', label: 'Objective-C' },
  { value: 'ocaml', label: 'OCaml' },
  { value: 'pascal', label: 'Pascal' },
  { value: 'perl', label: 'Perl' },
  { value: 'php', label: 'PHP' },
  { value: 'powershell', label: 'PowerShell' },
  { value: 'prolog', label: 'Prolog' },
  { value: 'protobuf', label: 'Protocol Buffers' },
  { value: 'puppet', label: 'Puppet' },
  { value: 'python', label: 'Python' },
  { value: 'r', label: 'R' },
  { value: 'reason', label: 'ReasonML' },
  { value: 'ruby', label: 'Ruby' },
  { value: 'rust', label: 'Rust' },
  { value: 'sass', label: 'Sass' },
  { value: 'scala', label: 'Scala' },
  { value: 'scheme', label: 'Scheme' },
  { value: 'scss', label: 'SCSS' },
  { value: 'shell', label: 'Shell Script' }, // Generic shell
  { value: 'smalltalk', label: 'Smalltalk' },
  { value: 'solidity', label: 'Solidity' },
  { value: 'sql', label: 'SQL' },
  { value: 'stylus', label: 'Stylus' },
  { value: 'swift', label: 'Swift' },
  { value: 'tcl', label: 'Tcl' },
  { value: 'terraform', label: 'Terraform (HCL)' },
  { value: 'tex', label: 'TeX' },
  { value: 'toml', label: 'TOML' },
  { value: 'tsx', label: 'TSX' },
  { value: 'typescript', label: 'TypeScript' },
  { value: 'vbnet', label: 'VB.NET' },
  { value: 'verilog', label: 'Verilog' },
  { value: 'vhdl', label: 'VHDL' },
  { value: 'vimscript', label: 'Vim script' },
  { value: 'vue', label: 'Vue.js' },
  { value: 'webassembly', label: 'WebAssembly (wat)' },
  { value: 'xml', label: 'XML' },
  { value: 'xsl', label: 'XSLT' },
  { value: 'yaml', label: 'YAML' },
  { value: 'zig', label: 'Zig' },
];

export const GEMINI_API_MODEL = 'gemini-2.5-flash-preview-04-17';

export const EXTENSION_TO_LANGUAGE_MAP: { [key: string]: string } = {
  'js': 'javascript',
  'jsx': 'jsx',
  'ts': 'typescript',
  'tsx': 'tsx',
  'py': 'python',
  'java': 'java',
  'c': 'c',
  'cpp': 'cpp',
  'cs': 'csharp',
  'go': 'go',
  'rb': 'ruby',
  'php': 'php',
  'swift': 'swift',
  'kt': 'kotlin',
  'rs': 'rust',
  'scala': 'scala',
  'html': 'html',
  'css': 'css',
  'scss': 'scss',
  'less': 'less',
  'json': 'json',
  'xml': 'xml',
  'yaml': 'yaml',
  'yml': 'yaml',
  'md': 'markdown',
  'sh': 'bash',
  'bash': 'bash',
  'shell': 'shell',
  'ps1': 'powershell',
  'sql': 'sql',
  'applescript': 'applescript',
  's': 'assembly', // Common for assembly
  'asm': 'assembly',
  'clj': 'clojure',
  'cljs': 'clojure',
  'cljc': 'clojure',
  'cob': 'cobol',
  'cbl': 'cobol',
  'coffee': 'coffeescript',
  'litcoffee': 'coffeescript',
  'd': 'd',
  'dart': 'dart',
  'pas': 'pascal', // Delphi/Pascal
  'dfm': 'delphi', // Delphi form files often with Pascal
  'lpr': 'delphi', // Lazarus/Delphi project files
  'diff': 'diff',
  'patch': 'diff',
  'dockerfile': 'dockerfile',
  'ex': 'elixir',
  'exs': 'elixir',
  'elm': 'elm',
  'erl': 'erlang',
  'hrl': 'erlang',
  'f': 'fortran',
  'f90': 'fortran',
  'f95': 'fortran',
  'fs': 'fsharp',
  'fsi': 'fsharp',
  'fsx': 'fsharp',
  'fsscript': 'fsharp',
  'gd': 'gdscript',
  'feature': 'gherkin',
  'gql': 'graphql',
  'groovy': 'groovy',
  'gvy': 'groovy',
  'gy': 'groovy',
  'gsh': 'groovy',
  'hs': 'haskell',
  'lhs': 'haskell',
  'hx': 'haxe',
  'jl': 'julia',
  'tex': 'latex',
  'ltx': 'latex', // Common for LaTeX
  'lisp': 'lisp',
  'lsp': 'lisp', // Common for Lisp
  'cl': 'lisp',   // Common Lisp
  'ls': 'livescript',
  'lua': 'lua',
  'mk': 'makefile', // Common for Makefile
  'mak': 'makefile',
  // 'm': 'matlab', // Also Objective-C -- Duplicate removed, 'objectivec' below takes precedence
  'nix': 'nix',
  'm': 'objectivec', // Also MATLAB. Kept this one for '.m'
  'mm': 'objectivec',
  'h': 'objectivec', // Header files can be C, C++, Obj-C
  'ml': 'ocaml',
  'mli': 'ocaml',
  // 'pl': 'perl', // Also Prolog -- Duplicate removed, 'prolog' below takes precedence
  'pm': 'perl',
  't': 'perl', // Test files
  'pws': 'powershell', // Less common, ps1 is standard
  'pro': 'prolog', // Also Qt Project files
  'pl': 'prolog', // Also Perl. Kept this one for '.pl'
  'proto': 'protobuf',
  'pp': 'puppet',
  'r': 'r',
  're': 'reason',
  'rei': 'reason',
  'sch': 'scheme', // Common for Scheme
  'scm': 'scheme',
  'sol': 'solidity',
  'styl': 'stylus',
  'tcl': 'tcl',
  'tf': 'terraform',
  'tfvars': 'terraform',
  'toml': 'toml',
  'vb': 'vbnet', // VB.NET
  'v': 'verilog',
  'sv': 'verilog', // SystemVerilog
  'vhd': 'vhdl',
  'vhdl': 'vhdl',
  'vim': 'vimscript',
  'vue': 'vue',
  'wat': 'webassembly',
  'wasm': 'webassembly',
  'xsl': 'xsl',
  'xslt': 'xsl',
  'zig': 'zig',
};
